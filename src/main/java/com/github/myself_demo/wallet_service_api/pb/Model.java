// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: model.proto

package com.github.myself_demo.wallet_service_api.pb;

public final class Model {
  private Model() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface CoinTypeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:wallet.CoinType)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string coinTypeId = 1;</code>
     * @return The coinTypeId.
     */
    java.lang.String getCoinTypeId();
    /**
     * <code>string coinTypeId = 1;</code>
     * @return The bytes for coinTypeId.
     */
    com.google.protobuf.ByteString
        getCoinTypeIdBytes();

    /**
     * <code>string coinTypeName = 2;</code>
     * @return The coinTypeName.
     */
    java.lang.String getCoinTypeName();
    /**
     * <code>string coinTypeName = 2;</code>
     * @return The bytes for coinTypeName.
     */
    com.google.protobuf.ByteString
        getCoinTypeNameBytes();
  }
  /**
   * Protobuf type {@code wallet.CoinType}
   */
  public static final class CoinType extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:wallet.CoinType)
      CoinTypeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CoinType.newBuilder() to construct.
    private CoinType(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CoinType() {
      coinTypeId_ = "";
      coinTypeName_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new CoinType();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CoinType(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              coinTypeId_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              coinTypeName_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.myself_demo.wallet_service_api.pb.Model.internal_static_wallet_CoinType_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.myself_demo.wallet_service_api.pb.Model.internal_static_wallet_CoinType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.myself_demo.wallet_service_api.pb.Model.CoinType.class, com.github.myself_demo.wallet_service_api.pb.Model.CoinType.Builder.class);
    }

    public static final int COINTYPEID_FIELD_NUMBER = 1;
    private volatile java.lang.Object coinTypeId_;
    /**
     * <code>string coinTypeId = 1;</code>
     * @return The coinTypeId.
     */
    @java.lang.Override
    public java.lang.String getCoinTypeId() {
      java.lang.Object ref = coinTypeId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        coinTypeId_ = s;
        return s;
      }
    }
    /**
     * <code>string coinTypeId = 1;</code>
     * @return The bytes for coinTypeId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCoinTypeIdBytes() {
      java.lang.Object ref = coinTypeId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        coinTypeId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int COINTYPENAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object coinTypeName_;
    /**
     * <code>string coinTypeName = 2;</code>
     * @return The coinTypeName.
     */
    @java.lang.Override
    public java.lang.String getCoinTypeName() {
      java.lang.Object ref = coinTypeName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        coinTypeName_ = s;
        return s;
      }
    }
    /**
     * <code>string coinTypeName = 2;</code>
     * @return The bytes for coinTypeName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCoinTypeNameBytes() {
      java.lang.Object ref = coinTypeName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        coinTypeName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(coinTypeId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, coinTypeId_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(coinTypeName_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, coinTypeName_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(coinTypeId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, coinTypeId_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(coinTypeName_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, coinTypeName_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.github.myself_demo.wallet_service_api.pb.Model.CoinType)) {
        return super.equals(obj);
      }
      com.github.myself_demo.wallet_service_api.pb.Model.CoinType other = (com.github.myself_demo.wallet_service_api.pb.Model.CoinType) obj;

      if (!getCoinTypeId()
          .equals(other.getCoinTypeId())) return false;
      if (!getCoinTypeName()
          .equals(other.getCoinTypeName())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + COINTYPEID_FIELD_NUMBER;
      hash = (53 * hash) + getCoinTypeId().hashCode();
      hash = (37 * hash) + COINTYPENAME_FIELD_NUMBER;
      hash = (53 * hash) + getCoinTypeName().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.github.myself_demo.wallet_service_api.pb.Model.CoinType parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.myself_demo.wallet_service_api.pb.Model.CoinType parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.myself_demo.wallet_service_api.pb.Model.CoinType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.myself_demo.wallet_service_api.pb.Model.CoinType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.myself_demo.wallet_service_api.pb.Model.CoinType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.myself_demo.wallet_service_api.pb.Model.CoinType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.myself_demo.wallet_service_api.pb.Model.CoinType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.myself_demo.wallet_service_api.pb.Model.CoinType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.myself_demo.wallet_service_api.pb.Model.CoinType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.myself_demo.wallet_service_api.pb.Model.CoinType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.myself_demo.wallet_service_api.pb.Model.CoinType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.myself_demo.wallet_service_api.pb.Model.CoinType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.myself_demo.wallet_service_api.pb.Model.CoinType prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code wallet.CoinType}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:wallet.CoinType)
        com.github.myself_demo.wallet_service_api.pb.Model.CoinTypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.myself_demo.wallet_service_api.pb.Model.internal_static_wallet_CoinType_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.myself_demo.wallet_service_api.pb.Model.internal_static_wallet_CoinType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.myself_demo.wallet_service_api.pb.Model.CoinType.class, com.github.myself_demo.wallet_service_api.pb.Model.CoinType.Builder.class);
      }

      // Construct using com.github.myself_demo.wallet_service_api.pb.Model.CoinType.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        coinTypeId_ = "";

        coinTypeName_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.myself_demo.wallet_service_api.pb.Model.internal_static_wallet_CoinType_descriptor;
      }

      @java.lang.Override
      public com.github.myself_demo.wallet_service_api.pb.Model.CoinType getDefaultInstanceForType() {
        return com.github.myself_demo.wallet_service_api.pb.Model.CoinType.getDefaultInstance();
      }

      @java.lang.Override
      public com.github.myself_demo.wallet_service_api.pb.Model.CoinType build() {
        com.github.myself_demo.wallet_service_api.pb.Model.CoinType result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.github.myself_demo.wallet_service_api.pb.Model.CoinType buildPartial() {
        com.github.myself_demo.wallet_service_api.pb.Model.CoinType result = new com.github.myself_demo.wallet_service_api.pb.Model.CoinType(this);
        result.coinTypeId_ = coinTypeId_;
        result.coinTypeName_ = coinTypeName_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.myself_demo.wallet_service_api.pb.Model.CoinType) {
          return mergeFrom((com.github.myself_demo.wallet_service_api.pb.Model.CoinType)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.myself_demo.wallet_service_api.pb.Model.CoinType other) {
        if (other == com.github.myself_demo.wallet_service_api.pb.Model.CoinType.getDefaultInstance()) return this;
        if (!other.getCoinTypeId().isEmpty()) {
          coinTypeId_ = other.coinTypeId_;
          onChanged();
        }
        if (!other.getCoinTypeName().isEmpty()) {
          coinTypeName_ = other.coinTypeName_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.myself_demo.wallet_service_api.pb.Model.CoinType parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.myself_demo.wallet_service_api.pb.Model.CoinType) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object coinTypeId_ = "";
      /**
       * <code>string coinTypeId = 1;</code>
       * @return The coinTypeId.
       */
      public java.lang.String getCoinTypeId() {
        java.lang.Object ref = coinTypeId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          coinTypeId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string coinTypeId = 1;</code>
       * @return The bytes for coinTypeId.
       */
      public com.google.protobuf.ByteString
          getCoinTypeIdBytes() {
        java.lang.Object ref = coinTypeId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          coinTypeId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string coinTypeId = 1;</code>
       * @param value The coinTypeId to set.
       * @return This builder for chaining.
       */
      public Builder setCoinTypeId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        coinTypeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string coinTypeId = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearCoinTypeId() {
        
        coinTypeId_ = getDefaultInstance().getCoinTypeId();
        onChanged();
        return this;
      }
      /**
       * <code>string coinTypeId = 1;</code>
       * @param value The bytes for coinTypeId to set.
       * @return This builder for chaining.
       */
      public Builder setCoinTypeIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        coinTypeId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object coinTypeName_ = "";
      /**
       * <code>string coinTypeName = 2;</code>
       * @return The coinTypeName.
       */
      public java.lang.String getCoinTypeName() {
        java.lang.Object ref = coinTypeName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          coinTypeName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string coinTypeName = 2;</code>
       * @return The bytes for coinTypeName.
       */
      public com.google.protobuf.ByteString
          getCoinTypeNameBytes() {
        java.lang.Object ref = coinTypeName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          coinTypeName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string coinTypeName = 2;</code>
       * @param value The coinTypeName to set.
       * @return This builder for chaining.
       */
      public Builder setCoinTypeName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        coinTypeName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string coinTypeName = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearCoinTypeName() {
        
        coinTypeName_ = getDefaultInstance().getCoinTypeName();
        onChanged();
        return this;
      }
      /**
       * <code>string coinTypeName = 2;</code>
       * @param value The bytes for coinTypeName to set.
       * @return This builder for chaining.
       */
      public Builder setCoinTypeNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        coinTypeName_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:wallet.CoinType)
    }

    // @@protoc_insertion_point(class_scope:wallet.CoinType)
    private static final com.github.myself_demo.wallet_service_api.pb.Model.CoinType DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.myself_demo.wallet_service_api.pb.Model.CoinType();
    }

    public static com.github.myself_demo.wallet_service_api.pb.Model.CoinType getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CoinType>
        PARSER = new com.google.protobuf.AbstractParser<CoinType>() {
      @java.lang.Override
      public CoinType parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CoinType(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CoinType> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CoinType> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.github.myself_demo.wallet_service_api.pb.Model.CoinType getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface WalletOrBuilder extends
      // @@protoc_insertion_point(interface_extends:wallet.Wallet)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string userId = 1;</code>
     * @return The userId.
     */
    java.lang.String getUserId();
    /**
     * <code>string userId = 1;</code>
     * @return The bytes for userId.
     */
    com.google.protobuf.ByteString
        getUserIdBytes();

    /**
     * <code>string walletId = 2;</code>
     * @return The walletId.
     */
    java.lang.String getWalletId();
    /**
     * <code>string walletId = 2;</code>
     * @return The bytes for walletId.
     */
    com.google.protobuf.ByteString
        getWalletIdBytes();

    /**
     * <code>string coinTypeId = 3;</code>
     * @return The coinTypeId.
     */
    java.lang.String getCoinTypeId();
    /**
     * <code>string coinTypeId = 3;</code>
     * @return The bytes for coinTypeId.
     */
    com.google.protobuf.ByteString
        getCoinTypeIdBytes();

    /**
     * <code>double availableBalance = 4;</code>
     * @return The availableBalance.
     */
    double getAvailableBalance();

    /**
     * <code>double freezeBalance = 5;</code>
     * @return The freezeBalance.
     */
    double getFreezeBalance();

    /**
     * <code>bool isLocking = 6;</code>
     * @return The isLocking.
     */
    boolean getIsLocking();
  }
  /**
   * Protobuf type {@code wallet.Wallet}
   */
  public static final class Wallet extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:wallet.Wallet)
      WalletOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Wallet.newBuilder() to construct.
    private Wallet(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Wallet() {
      userId_ = "";
      walletId_ = "";
      coinTypeId_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Wallet();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Wallet(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              userId_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              walletId_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              coinTypeId_ = s;
              break;
            }
            case 33: {

              availableBalance_ = input.readDouble();
              break;
            }
            case 41: {

              freezeBalance_ = input.readDouble();
              break;
            }
            case 48: {

              isLocking_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.myself_demo.wallet_service_api.pb.Model.internal_static_wallet_Wallet_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.myself_demo.wallet_service_api.pb.Model.internal_static_wallet_Wallet_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.myself_demo.wallet_service_api.pb.Model.Wallet.class, com.github.myself_demo.wallet_service_api.pb.Model.Wallet.Builder.class);
    }

    public static final int USERID_FIELD_NUMBER = 1;
    private volatile java.lang.Object userId_;
    /**
     * <code>string userId = 1;</code>
     * @return The userId.
     */
    @java.lang.Override
    public java.lang.String getUserId() {
      java.lang.Object ref = userId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        userId_ = s;
        return s;
      }
    }
    /**
     * <code>string userId = 1;</code>
     * @return The bytes for userId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getUserIdBytes() {
      java.lang.Object ref = userId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        userId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int WALLETID_FIELD_NUMBER = 2;
    private volatile java.lang.Object walletId_;
    /**
     * <code>string walletId = 2;</code>
     * @return The walletId.
     */
    @java.lang.Override
    public java.lang.String getWalletId() {
      java.lang.Object ref = walletId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        walletId_ = s;
        return s;
      }
    }
    /**
     * <code>string walletId = 2;</code>
     * @return The bytes for walletId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getWalletIdBytes() {
      java.lang.Object ref = walletId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        walletId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int COINTYPEID_FIELD_NUMBER = 3;
    private volatile java.lang.Object coinTypeId_;
    /**
     * <code>string coinTypeId = 3;</code>
     * @return The coinTypeId.
     */
    @java.lang.Override
    public java.lang.String getCoinTypeId() {
      java.lang.Object ref = coinTypeId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        coinTypeId_ = s;
        return s;
      }
    }
    /**
     * <code>string coinTypeId = 3;</code>
     * @return The bytes for coinTypeId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCoinTypeIdBytes() {
      java.lang.Object ref = coinTypeId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        coinTypeId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int AVAILABLEBALANCE_FIELD_NUMBER = 4;
    private double availableBalance_;
    /**
     * <code>double availableBalance = 4;</code>
     * @return The availableBalance.
     */
    @java.lang.Override
    public double getAvailableBalance() {
      return availableBalance_;
    }

    public static final int FREEZEBALANCE_FIELD_NUMBER = 5;
    private double freezeBalance_;
    /**
     * <code>double freezeBalance = 5;</code>
     * @return The freezeBalance.
     */
    @java.lang.Override
    public double getFreezeBalance() {
      return freezeBalance_;
    }

    public static final int ISLOCKING_FIELD_NUMBER = 6;
    private boolean isLocking_;
    /**
     * <code>bool isLocking = 6;</code>
     * @return The isLocking.
     */
    @java.lang.Override
    public boolean getIsLocking() {
      return isLocking_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(userId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, userId_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(walletId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, walletId_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(coinTypeId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, coinTypeId_);
      }
      if (java.lang.Double.doubleToRawLongBits(availableBalance_) != 0) {
        output.writeDouble(4, availableBalance_);
      }
      if (java.lang.Double.doubleToRawLongBits(freezeBalance_) != 0) {
        output.writeDouble(5, freezeBalance_);
      }
      if (isLocking_ != false) {
        output.writeBool(6, isLocking_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(userId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, userId_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(walletId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, walletId_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(coinTypeId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, coinTypeId_);
      }
      if (java.lang.Double.doubleToRawLongBits(availableBalance_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, availableBalance_);
      }
      if (java.lang.Double.doubleToRawLongBits(freezeBalance_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, freezeBalance_);
      }
      if (isLocking_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, isLocking_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.github.myself_demo.wallet_service_api.pb.Model.Wallet)) {
        return super.equals(obj);
      }
      com.github.myself_demo.wallet_service_api.pb.Model.Wallet other = (com.github.myself_demo.wallet_service_api.pb.Model.Wallet) obj;

      if (!getUserId()
          .equals(other.getUserId())) return false;
      if (!getWalletId()
          .equals(other.getWalletId())) return false;
      if (!getCoinTypeId()
          .equals(other.getCoinTypeId())) return false;
      if (java.lang.Double.doubleToLongBits(getAvailableBalance())
          != java.lang.Double.doubleToLongBits(
              other.getAvailableBalance())) return false;
      if (java.lang.Double.doubleToLongBits(getFreezeBalance())
          != java.lang.Double.doubleToLongBits(
              other.getFreezeBalance())) return false;
      if (getIsLocking()
          != other.getIsLocking()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + USERID_FIELD_NUMBER;
      hash = (53 * hash) + getUserId().hashCode();
      hash = (37 * hash) + WALLETID_FIELD_NUMBER;
      hash = (53 * hash) + getWalletId().hashCode();
      hash = (37 * hash) + COINTYPEID_FIELD_NUMBER;
      hash = (53 * hash) + getCoinTypeId().hashCode();
      hash = (37 * hash) + AVAILABLEBALANCE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getAvailableBalance()));
      hash = (37 * hash) + FREEZEBALANCE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getFreezeBalance()));
      hash = (37 * hash) + ISLOCKING_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsLocking());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.github.myself_demo.wallet_service_api.pb.Model.Wallet parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.myself_demo.wallet_service_api.pb.Model.Wallet parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.myself_demo.wallet_service_api.pb.Model.Wallet parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.myself_demo.wallet_service_api.pb.Model.Wallet parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.myself_demo.wallet_service_api.pb.Model.Wallet parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.myself_demo.wallet_service_api.pb.Model.Wallet parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.myself_demo.wallet_service_api.pb.Model.Wallet parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.myself_demo.wallet_service_api.pb.Model.Wallet parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.myself_demo.wallet_service_api.pb.Model.Wallet parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.myself_demo.wallet_service_api.pb.Model.Wallet parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.myself_demo.wallet_service_api.pb.Model.Wallet parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.myself_demo.wallet_service_api.pb.Model.Wallet parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.myself_demo.wallet_service_api.pb.Model.Wallet prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code wallet.Wallet}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:wallet.Wallet)
        com.github.myself_demo.wallet_service_api.pb.Model.WalletOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.myself_demo.wallet_service_api.pb.Model.internal_static_wallet_Wallet_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.myself_demo.wallet_service_api.pb.Model.internal_static_wallet_Wallet_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.myself_demo.wallet_service_api.pb.Model.Wallet.class, com.github.myself_demo.wallet_service_api.pb.Model.Wallet.Builder.class);
      }

      // Construct using com.github.myself_demo.wallet_service_api.pb.Model.Wallet.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        userId_ = "";

        walletId_ = "";

        coinTypeId_ = "";

        availableBalance_ = 0D;

        freezeBalance_ = 0D;

        isLocking_ = false;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.myself_demo.wallet_service_api.pb.Model.internal_static_wallet_Wallet_descriptor;
      }

      @java.lang.Override
      public com.github.myself_demo.wallet_service_api.pb.Model.Wallet getDefaultInstanceForType() {
        return com.github.myself_demo.wallet_service_api.pb.Model.Wallet.getDefaultInstance();
      }

      @java.lang.Override
      public com.github.myself_demo.wallet_service_api.pb.Model.Wallet build() {
        com.github.myself_demo.wallet_service_api.pb.Model.Wallet result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.github.myself_demo.wallet_service_api.pb.Model.Wallet buildPartial() {
        com.github.myself_demo.wallet_service_api.pb.Model.Wallet result = new com.github.myself_demo.wallet_service_api.pb.Model.Wallet(this);
        result.userId_ = userId_;
        result.walletId_ = walletId_;
        result.coinTypeId_ = coinTypeId_;
        result.availableBalance_ = availableBalance_;
        result.freezeBalance_ = freezeBalance_;
        result.isLocking_ = isLocking_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.myself_demo.wallet_service_api.pb.Model.Wallet) {
          return mergeFrom((com.github.myself_demo.wallet_service_api.pb.Model.Wallet)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.myself_demo.wallet_service_api.pb.Model.Wallet other) {
        if (other == com.github.myself_demo.wallet_service_api.pb.Model.Wallet.getDefaultInstance()) return this;
        if (!other.getUserId().isEmpty()) {
          userId_ = other.userId_;
          onChanged();
        }
        if (!other.getWalletId().isEmpty()) {
          walletId_ = other.walletId_;
          onChanged();
        }
        if (!other.getCoinTypeId().isEmpty()) {
          coinTypeId_ = other.coinTypeId_;
          onChanged();
        }
        if (other.getAvailableBalance() != 0D) {
          setAvailableBalance(other.getAvailableBalance());
        }
        if (other.getFreezeBalance() != 0D) {
          setFreezeBalance(other.getFreezeBalance());
        }
        if (other.getIsLocking() != false) {
          setIsLocking(other.getIsLocking());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.myself_demo.wallet_service_api.pb.Model.Wallet parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.myself_demo.wallet_service_api.pb.Model.Wallet) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object userId_ = "";
      /**
       * <code>string userId = 1;</code>
       * @return The userId.
       */
      public java.lang.String getUserId() {
        java.lang.Object ref = userId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          userId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string userId = 1;</code>
       * @return The bytes for userId.
       */
      public com.google.protobuf.ByteString
          getUserIdBytes() {
        java.lang.Object ref = userId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          userId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string userId = 1;</code>
       * @param value The userId to set.
       * @return This builder for chaining.
       */
      public Builder setUserId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        userId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string userId = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearUserId() {
        
        userId_ = getDefaultInstance().getUserId();
        onChanged();
        return this;
      }
      /**
       * <code>string userId = 1;</code>
       * @param value The bytes for userId to set.
       * @return This builder for chaining.
       */
      public Builder setUserIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        userId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object walletId_ = "";
      /**
       * <code>string walletId = 2;</code>
       * @return The walletId.
       */
      public java.lang.String getWalletId() {
        java.lang.Object ref = walletId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          walletId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string walletId = 2;</code>
       * @return The bytes for walletId.
       */
      public com.google.protobuf.ByteString
          getWalletIdBytes() {
        java.lang.Object ref = walletId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          walletId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string walletId = 2;</code>
       * @param value The walletId to set.
       * @return This builder for chaining.
       */
      public Builder setWalletId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        walletId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string walletId = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearWalletId() {
        
        walletId_ = getDefaultInstance().getWalletId();
        onChanged();
        return this;
      }
      /**
       * <code>string walletId = 2;</code>
       * @param value The bytes for walletId to set.
       * @return This builder for chaining.
       */
      public Builder setWalletIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        walletId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object coinTypeId_ = "";
      /**
       * <code>string coinTypeId = 3;</code>
       * @return The coinTypeId.
       */
      public java.lang.String getCoinTypeId() {
        java.lang.Object ref = coinTypeId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          coinTypeId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string coinTypeId = 3;</code>
       * @return The bytes for coinTypeId.
       */
      public com.google.protobuf.ByteString
          getCoinTypeIdBytes() {
        java.lang.Object ref = coinTypeId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          coinTypeId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string coinTypeId = 3;</code>
       * @param value The coinTypeId to set.
       * @return This builder for chaining.
       */
      public Builder setCoinTypeId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        coinTypeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string coinTypeId = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearCoinTypeId() {
        
        coinTypeId_ = getDefaultInstance().getCoinTypeId();
        onChanged();
        return this;
      }
      /**
       * <code>string coinTypeId = 3;</code>
       * @param value The bytes for coinTypeId to set.
       * @return This builder for chaining.
       */
      public Builder setCoinTypeIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        coinTypeId_ = value;
        onChanged();
        return this;
      }

      private double availableBalance_ ;
      /**
       * <code>double availableBalance = 4;</code>
       * @return The availableBalance.
       */
      @java.lang.Override
      public double getAvailableBalance() {
        return availableBalance_;
      }
      /**
       * <code>double availableBalance = 4;</code>
       * @param value The availableBalance to set.
       * @return This builder for chaining.
       */
      public Builder setAvailableBalance(double value) {
        
        availableBalance_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double availableBalance = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearAvailableBalance() {
        
        availableBalance_ = 0D;
        onChanged();
        return this;
      }

      private double freezeBalance_ ;
      /**
       * <code>double freezeBalance = 5;</code>
       * @return The freezeBalance.
       */
      @java.lang.Override
      public double getFreezeBalance() {
        return freezeBalance_;
      }
      /**
       * <code>double freezeBalance = 5;</code>
       * @param value The freezeBalance to set.
       * @return This builder for chaining.
       */
      public Builder setFreezeBalance(double value) {
        
        freezeBalance_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double freezeBalance = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearFreezeBalance() {
        
        freezeBalance_ = 0D;
        onChanged();
        return this;
      }

      private boolean isLocking_ ;
      /**
       * <code>bool isLocking = 6;</code>
       * @return The isLocking.
       */
      @java.lang.Override
      public boolean getIsLocking() {
        return isLocking_;
      }
      /**
       * <code>bool isLocking = 6;</code>
       * @param value The isLocking to set.
       * @return This builder for chaining.
       */
      public Builder setIsLocking(boolean value) {
        
        isLocking_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool isLocking = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsLocking() {
        
        isLocking_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:wallet.Wallet)
    }

    // @@protoc_insertion_point(class_scope:wallet.Wallet)
    private static final com.github.myself_demo.wallet_service_api.pb.Model.Wallet DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.myself_demo.wallet_service_api.pb.Model.Wallet();
    }

    public static com.github.myself_demo.wallet_service_api.pb.Model.Wallet getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Wallet>
        PARSER = new com.google.protobuf.AbstractParser<Wallet>() {
      @java.lang.Override
      public Wallet parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Wallet(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Wallet> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Wallet> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.github.myself_demo.wallet_service_api.pb.Model.Wallet getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_wallet_CoinType_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_wallet_CoinType_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_wallet_Wallet_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_wallet_Wallet_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\013model.proto\022\006wallet\"4\n\010CoinType\022\022\n\ncoi" +
      "nTypeId\030\001 \001(\t\022\024\n\014coinTypeName\030\002 \001(\t\"\202\001\n\006" +
      "Wallet\022\016\n\006userId\030\001 \001(\t\022\020\n\010walletId\030\002 \001(\t" +
      "\022\022\n\ncoinTypeId\030\003 \001(\t\022\030\n\020availableBalance" +
      "\030\004 \001(\001\022\025\n\rfreezeBalance\030\005 \001(\001\022\021\n\tisLocki" +
      "ng\030\006 \001(\010Bh\n,com.github.myself_demo.walle" +
      "t_service_api.pbB\005ModelP\000Z/github.com/my" +
      "self-demo/wallet-service-api/pb;pbb\006prot" +
      "o3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_wallet_CoinType_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_wallet_CoinType_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_wallet_CoinType_descriptor,
        new java.lang.String[] { "CoinTypeId", "CoinTypeName", });
    internal_static_wallet_Wallet_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_wallet_Wallet_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_wallet_Wallet_descriptor,
        new java.lang.String[] { "UserId", "WalletId", "CoinTypeId", "AvailableBalance", "FreezeBalance", "IsLocking", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
